#########################################################################
#
# made by Marshaw
#
# excel的起始日期是1899-12-30
#
# 最新更新：12/1/2024
# AWS导出的csv档案计算异常交易客户的盈利
#
#######################################################################

rm(list=ls())

library(readxl)
library(dplyr)
library(openxlsx)
library(officer)
library(flextable)
library(lubridate)
library(readxl)
library(tidyr)
library(data.table)
#########################################   导入资料   ########################################################################
# 选择文件并返回文件路径
file_path <- file.choose()
# 检查是否选择了文件
if (!is.null(file_path)) {
  # 打开文件
  file <- file(file_path, "r")
  # 读取文件内容
  file_contents <- readLines(file)
  # 输出文件内容
  cat(file_contents, sep = "\n")
  # 关闭文件
  close(file)
} else {
  # 用户取消了文件选择
  cat("未选择文件。\n")
}
library(readxl)
rawdata <- read.csv(file_path, sep = ",")
rawdata <- rawdata[,c(1:4)]

# 计算卖出和买入的总金额
data1 <- rawdata %>%
  group_by(member_id, currency, side) %>%
  summarise(total_amount_usdt = sum(amount_usdt))
# 使用pivot_wider函数将数据重新排列，创建两列（卖出和买入），并将总金额作为值填充，前缀为"total_"
data1 <- data1 %>%
  pivot_wider(names_from = side, values_from = total_amount_usdt, 
              names_prefix = "total_", values_fill = 0)
n <- nrow(data1)#总共一天里有多少个客户交易

# 计算总利润
data1$total_profit <- data1$total_SELL - data1$total_BUY
# 移除多余的列
data1 <- data1 %>%
  select(member_id, currency, total_profit)
# 移除缺失值
data1 <- na.omit(data1)
# 移除重复的记录
data1 <- unique(data1)
data1$total_profit <- as.numeric(data1$total_profit)
data1 <- data1 %>%
  filter(!(currency %in% c("USDC", "USDT")))


data_profit <- data1 %>%
  group_by(member_id, currency) %>%
  summarise(total_profit = sum(total_profit)) %>%
  filter(total_profit > 0)

data2 <- data1 %>%  group_by(member_id, currency) %>% summarise(total_profit = sum(total_profit)) %>% filter(total_profit > 5000)
data2 <- data2[order(data2$total_profit, decreasing = T),]
options(scipen = 999)
nrow(data2)/n #一天里盈利大于5000的客户
nrow(data_profit)/n #一天里盈利的客户

small_crypto_data <- data2 %>%
  filter(!(currency %in% c("ETH", "BTC", "BNB", "SOL", "MATIC", "AVAX","ADA","MX","LINK","TON","XMR")))
length(unique(small_crypto_data$currency))

reasonable_profit_data <- small_crypto_data %>% group_by(member_id, currency) %>% summarise(total_profit = sum(total_profit)) %>% filter(total_profit < 150000)
reasonable_profit_data <- reasonable_profit_data[order(reasonable_profit_data$total_profit, decreasing = T),]
length(unique(reasonable_profit_data$currency))

wb <- createWorkbook()
addWorksheet(wb,"reasonable_profit_data")
writeData(wb,"reasonable_profit_data", reasonable_profit_data)
# 保存 Excel 文件
saveWorkbook(wb, "Downloads/reasonable_profit_data.xlsx", overwrite = TRUE)

'导出的资料是盈利介于5000和150000之间的账户
问题：找出每日交易少于100笔的客户，多于100笔当作api交易'



